
          window.__NEXT_REGISTER_PAGE('/book-demo', function() {
            var comp = module.exports =
webpackJsonp([8],{

/***/ 570:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(11);

var _react2 = _interopRequireDefault(_react);

var _head = __webpack_require__(226);

var _head2 = _interopRequireDefault(_head);

var _global = __webpack_require__(571);

var _global2 = _interopRequireDefault(_global);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/nimmo/misc/nextjs-example/components/common/page_head.js';


var pageHead = function pageHead(_ref) {
  var pageTitle = _ref.pageTitle;
  return _react2.default.createElement(_head2.default, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 6
    }
  }, _react2.default.createElement('title', {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 7
    }
  }, pageTitle), _react2.default.createElement('meta', {
    name: 'viewport',
    content: 'initial-scale=1.0, width=device-width', __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    }
  }), _react2.default.createElement('meta', {
    name: 'mobile-webb-app-capable',
    content: 'yes', __source: {
      fileName: _jsxFileName,
      lineNumber: 11
    }
  }), _react2.default.createElement('meta', {
    name: 'apple-mobile-webb-app-capable',
    content: 'yes', __source: {
      fileName: _jsxFileName,
      lineNumber: 14
    }
  }), _react2.default.createElement('link', { href: 'https://fonts.googleapis.com/css?family=Source+Sans+Pro', rel: 'stylesheet', __source: {
      fileName: _jsxFileName,
      lineNumber: 17
    }
  }), _react2.default.createElement('style', { dangerouslySetInnerHTML: { __html: _global2.default }, __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    }
  }));
};

exports.default = pageHead;

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/nimmo/misc/nextjs-example/components/common/page_head.js"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/nimmo/misc/nextjs-example/components/common/page_head.js"); } } })();

/***/ }),

/***/ 571:
/***/ (function(module, exports) {

var __styledJsxDefaultExport = new String("html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type=\"button\"],[type=\"reset\"],[type=\"submit\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner,[type=\"reset\"]::-moz-focus-inner,[type=\"submit\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\"button\"]:-moz-focusring,[type=\"reset\"]:-moz-focusring,[type=\"submit\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=\"checkbox\"],[type=\"radio\"]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=\"number\"]::-webkit-inner-spin-button,[type=\"number\"]::-webkit-outer-spin-button{height:auto}[type=\"search\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\"search\"]::-webkit-search-cancel-button,[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}header{background-color:#321f3e;padding:2%;text-align:left}header .logo{color:#fff;height:50px;width:auto}@media screen and (min-width:1040px){header .logo{height:70px}}.banner{background-image:url(\"http://travel.cloud/wp-content/uploads/2017/03/travel-cloud-header-mobile.jpg\");background-position:right bottom;background-size:cover;color:#fff;margin-top:-20px;min-height:70vh;padding-bottom:14%;padding-left:3%;padding-right:3%;padding-top:2%}@media screen and (min-width:640px){.banner{background-image:url(\"http://travel.cloud/wp-content/uploads/2017/03/travel-cloud-header-tablet.jpg\")}}@media screen and (min-width:1040px){.banner{background-image:url(\"http://travel.cloud/wp-content/uploads/2017/03/travel-cloud-header-web.jpg\");text-align:left}}.banner h1{font-size:55px;font-weight:normal;line-height:55px;padding:50px}@media screen and (min-width:1040px){.banner h1{padding:0}}.banner .button{background-color:#fff;border-color:#fff;color:#9e1e62}.banner .button:hover{background-color:#9e1e62;color:#fff}.banner span{font-size:20px;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px}.businessChallenges{font-size:18px;padding:100px}@media screen and (min-width:1040px){.challengeItem{display:inline-block;max-width:30vw;margin:20px}}.productFeatures{background-color:#f7f7f7;padding:20px}.productFeatures h2{padding-top:20px}@media screen and (min-width:1040px){.productFeatures{padding:0}}.featureContainer{display:-webkit-box;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.featureDescription{background-color:#fff;-webkit-box-flex:1;-ms-flex-positive:1;-webkit-flex-grow:1;-ms-flex-grow:1;flex-grow:1;margin-bottom:2vw;padding:20px;width:80vw}.featureDescription h3{font-size:22px}.featureDescription p{font-size:18px}@media screen and (min-width:1040px){.featureDescription{display:inline-block;margin-left:3vw;margin-right:3vw;min-height:400px;width:24vw}}.siteNavigation{background-color:#321f3e}.siteNavigation a{border-bottom:1px solid #fff;color:#fff;display:block;padding:20px;text-decoration:none;-webkit-transition:all linear .3s;-webkit-transition:all linear .3s;transition:all linear .3s}.siteNavigation a:hover{background-color:#fff;color:#321f3e}.siteNavigation a:last-of-type{border-bottom:0}@media screen and (min-width:1040px){.siteNavigation a{border-bottom:none;border-radius:5px;display:inline-block}}.siteNavigation .closed{height:0}@media screen and (min-width:1040px){.siteNavigation{position:absolute;right:0;top:0}.siteNavigation.closed{height:100%}}footer{background-color:#141418;color:#fff;-ms-flex-negative:0;-webkit-flex-shrink:0;-ms-flex-shrink:0;flex-shrink:0;margin-top:auto;padding:20px}html{height:100%}body{background-color:#161618;display:-webkit-box;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;font-family:'Source Sans Pro',sans-serif;min-height:100vh;text-align:center}.content{background-color:#fff;min-height:55vh;padding:20px 0}.button{background-color:#9e1e62;border:1px solid #9e1e62;border-radius:35px;color:#fff;cursor:pointer;display:block;font-size:20px;margin:40px 15vw;max-width:60vw;padding:14px 20px;text-decoration:none;-webkit-transition:all linear .3s;-webkit-transition:all linear .3s;transition:all linear .3s}.button:hover{background-color:#fff;color:#9e1e62}@media screen and (min-width:1040px){.button{display:inline-block;margin-left:5vw;margin-right:0}.button:first-of-type{margin-left:0}}\n/*# sourceMappingURL=data:application/json;base64, */\n/*@ sourceURL=styles/global.scss */");

__styledJsxDefaultExport.__hash = "13264778073";
__styledJsxDefaultExport.__scoped = "html[data-jsx-ext~=\"23264778073\"]{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body[data-jsx-ext~=\"23264778073\"]{margin:0}article[data-jsx-ext~=\"23264778073\"],aside[data-jsx-ext~=\"23264778073\"],footer[data-jsx-ext~=\"23264778073\"],header[data-jsx-ext~=\"23264778073\"],nav[data-jsx-ext~=\"23264778073\"],section[data-jsx-ext~=\"23264778073\"]{display:block}h1[data-jsx-ext~=\"23264778073\"]{font-size:2em;margin:0.67em 0}figcaption[data-jsx-ext~=\"23264778073\"],figure[data-jsx-ext~=\"23264778073\"],main[data-jsx-ext~=\"23264778073\"]{display:block}figure[data-jsx-ext~=\"23264778073\"]{margin:1em 40px}hr[data-jsx-ext~=\"23264778073\"]{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre[data-jsx-ext~=\"23264778073\"]{font-family:monospace,monospace;font-size:1em}a[data-jsx-ext~=\"23264778073\"]{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title][data-jsx-ext~=\"23264778073\"]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b[data-jsx-ext~=\"23264778073\"],strong[data-jsx-ext~=\"23264778073\"]{font-weight:inherit}b[data-jsx-ext~=\"23264778073\"],strong[data-jsx-ext~=\"23264778073\"]{font-weight:bolder}code[data-jsx-ext~=\"23264778073\"],kbd[data-jsx-ext~=\"23264778073\"],samp[data-jsx-ext~=\"23264778073\"]{font-family:monospace,monospace;font-size:1em}dfn[data-jsx-ext~=\"23264778073\"]{font-style:italic}mark[data-jsx-ext~=\"23264778073\"]{background-color:#ff0;color:#000}small[data-jsx-ext~=\"23264778073\"]{font-size:80%}sub[data-jsx-ext~=\"23264778073\"],sup[data-jsx-ext~=\"23264778073\"]{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub[data-jsx-ext~=\"23264778073\"]{bottom:-0.25em}sup[data-jsx-ext~=\"23264778073\"]{top:-0.5em}audio[data-jsx-ext~=\"23264778073\"],video[data-jsx-ext~=\"23264778073\"]{display:inline-block}audio[data-jsx-ext~=\"23264778073\"]:not([controls]){display:none;height:0}img[data-jsx-ext~=\"23264778073\"]{border-style:none}svg[data-jsx-ext~=\"23264778073\"]:not(:root){overflow:hidden}button[data-jsx-ext~=\"23264778073\"],input[data-jsx-ext~=\"23264778073\"],optgroup[data-jsx-ext~=\"23264778073\"],select[data-jsx-ext~=\"23264778073\"],textarea[data-jsx-ext~=\"23264778073\"]{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button[data-jsx-ext~=\"23264778073\"],input[data-jsx-ext~=\"23264778073\"]{overflow:visible}button[data-jsx-ext~=\"23264778073\"],select[data-jsx-ext~=\"23264778073\"]{text-transform:none}button[data-jsx-ext~=\"23264778073\"],html[data-jsx-ext~=\"23264778073\"] [type=\"button\"][data-jsx-ext~=\"23264778073\"],[type=\"reset\"][data-jsx-ext~=\"23264778073\"],[type=\"submit\"][data-jsx-ext~=\"23264778073\"]{-webkit-appearance:button}button[data-jsx-ext~=\"23264778073\"]::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner[data-jsx-ext~=\"23264778073\"],[type=\"reset\"]::-moz-focus-inner[data-jsx-ext~=\"23264778073\"],[type=\"submit\"]::-moz-focus-inner[data-jsx-ext~=\"23264778073\"]{border-style:none;padding:0}button[data-jsx-ext~=\"23264778073\"]:-moz-focusring,[type=\"button\"]:-moz-focusring[data-jsx-ext~=\"23264778073\"],[type=\"reset\"]:-moz-focusring[data-jsx-ext~=\"23264778073\"],[type=\"submit\"]:-moz-focusring[data-jsx-ext~=\"23264778073\"]{outline:1px dotted ButtonText}fieldset[data-jsx-ext~=\"23264778073\"]{padding:0.35em 0.75em 0.625em}legend[data-jsx-ext~=\"23264778073\"]{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress[data-jsx-ext~=\"23264778073\"]{display:inline-block;vertical-align:baseline}textarea[data-jsx-ext~=\"23264778073\"]{overflow:auto}[type=\"checkbox\"][data-jsx-ext~=\"23264778073\"],[type=\"radio\"][data-jsx-ext~=\"23264778073\"]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=\"number\"]::-webkit-inner-spin-button[data-jsx-ext~=\"23264778073\"],[type=\"number\"]::-webkit-outer-spin-button[data-jsx-ext~=\"23264778073\"]{height:auto}[type=\"search\"][data-jsx-ext~=\"23264778073\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\"search\"]::-webkit-search-cancel-button[data-jsx-ext~=\"23264778073\"],[type=\"search\"]::-webkit-search-decoration[data-jsx-ext~=\"23264778073\"]{-webkit-appearance:none}[data-jsx-ext~=\"23264778073\"]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details[data-jsx-ext~=\"23264778073\"],menu[data-jsx-ext~=\"23264778073\"]{display:block}summary[data-jsx-ext~=\"23264778073\"]{display:list-item}canvas[data-jsx-ext~=\"23264778073\"]{display:inline-block}template[data-jsx-ext~=\"23264778073\"]{display:none}[hidden][data-jsx-ext~=\"23264778073\"]{display:none}header[data-jsx-ext~=\"23264778073\"]{background-color:#321f3e;padding:2%;text-align:left}header[data-jsx-ext~=\"23264778073\"] .logo[data-jsx-ext~=\"23264778073\"]{color:#fff;height:50px;width:auto}@media screen and (min-width:1040px){header[data-jsx-ext~=\"23264778073\"] .logo[data-jsx-ext~=\"23264778073\"]{height:70px}}.banner[data-jsx-ext~=\"23264778073\"]{background-image:url(\"http://travel.cloud/wp-content/uploads/2017/03/travel-cloud-header-mobile.jpg\");background-position:right bottom;background-size:cover;color:#fff;margin-top:-20px;min-height:70vh;padding-bottom:14%;padding-left:3%;padding-right:3%;padding-top:2%}@media screen and (min-width:640px){.banner[data-jsx-ext~=\"23264778073\"]{background-image:url(\"http://travel.cloud/wp-content/uploads/2017/03/travel-cloud-header-tablet.jpg\")}}@media screen and (min-width:1040px){.banner[data-jsx-ext~=\"23264778073\"]{background-image:url(\"http://travel.cloud/wp-content/uploads/2017/03/travel-cloud-header-web.jpg\");text-align:left}}.banner[data-jsx-ext~=\"23264778073\"] h1[data-jsx-ext~=\"23264778073\"]{font-size:55px;font-weight:normal;line-height:55px;padding:50px}@media screen and (min-width:1040px){.banner[data-jsx-ext~=\"23264778073\"] h1[data-jsx-ext~=\"23264778073\"]{padding:0}}.banner[data-jsx-ext~=\"23264778073\"] .button[data-jsx-ext~=\"23264778073\"]{background-color:#fff;border-color:#fff;color:#9e1e62}.banner[data-jsx-ext~=\"23264778073\"] .button[data-jsx-ext~=\"23264778073\"]:hover{background-color:#9e1e62;color:#fff}.banner[data-jsx-ext~=\"23264778073\"] span[data-jsx-ext~=\"23264778073\"]{font-size:20px;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px}.businessChallenges[data-jsx-ext~=\"23264778073\"]{font-size:18px;padding:100px}@media screen and (min-width:1040px){.challengeItem[data-jsx-ext~=\"23264778073\"]{display:inline-block;max-width:30vw;margin:20px}}.productFeatures[data-jsx-ext~=\"23264778073\"]{background-color:#f7f7f7;padding:20px}.productFeatures[data-jsx-ext~=\"23264778073\"] h2[data-jsx-ext~=\"23264778073\"]{padding-top:20px}@media screen and (min-width:1040px){.productFeatures[data-jsx-ext~=\"23264778073\"]{padding:0}}.featureContainer[data-jsx-ext~=\"23264778073\"]{display:-webkit-box;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.featureDescription[data-jsx-ext~=\"23264778073\"]{background-color:#fff;-webkit-box-flex:1;-ms-flex-positive:1;-webkit-flex-grow:1;-ms-flex-grow:1;flex-grow:1;margin-bottom:2vw;padding:20px;width:80vw}.featureDescription[data-jsx-ext~=\"23264778073\"] h3[data-jsx-ext~=\"23264778073\"]{font-size:22px}.featureDescription[data-jsx-ext~=\"23264778073\"] p[data-jsx-ext~=\"23264778073\"]{font-size:18px}@media screen and (min-width:1040px){.featureDescription[data-jsx-ext~=\"23264778073\"]{display:inline-block;margin-left:3vw;margin-right:3vw;min-height:400px;width:24vw}}.siteNavigation[data-jsx-ext~=\"23264778073\"]{background-color:#321f3e}.siteNavigation[data-jsx-ext~=\"23264778073\"] a[data-jsx-ext~=\"23264778073\"]{border-bottom:1px solid #fff;color:#fff;display:block;padding:20px;text-decoration:none;-webkit-transition:all linear .3s;-webkit-transition:all linear .3s;transition:all linear .3s}.siteNavigation[data-jsx-ext~=\"23264778073\"] a[data-jsx-ext~=\"23264778073\"]:hover{background-color:#fff;color:#321f3e}.siteNavigation[data-jsx-ext~=\"23264778073\"] a[data-jsx-ext~=\"23264778073\"]:last-of-type{border-bottom:0}@media screen and (min-width:1040px){.siteNavigation[data-jsx-ext~=\"23264778073\"] a[data-jsx-ext~=\"23264778073\"]{border-bottom:none;border-radius:5px;display:inline-block}}.siteNavigation[data-jsx-ext~=\"23264778073\"] .closed[data-jsx-ext~=\"23264778073\"]{height:0}@media screen and (min-width:1040px){.siteNavigation[data-jsx-ext~=\"23264778073\"]{position:absolute;right:0;top:0}.siteNavigation.closed[data-jsx-ext~=\"23264778073\"]{height:100%}}footer[data-jsx-ext~=\"23264778073\"]{background-color:#141418;color:#fff;-ms-flex-negative:0;-webkit-flex-shrink:0;-ms-flex-shrink:0;flex-shrink:0;margin-top:auto;padding:20px}html[data-jsx-ext~=\"23264778073\"]{height:100%}body[data-jsx-ext~=\"23264778073\"]{background-color:#161618;display:-webkit-box;display:-ms-flexbox;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;font-family:'Source Sans Pro',sans-serif;min-height:100vh;text-align:center}.content[data-jsx-ext~=\"23264778073\"]{background-color:#fff;min-height:55vh;padding:20px 0}.button[data-jsx-ext~=\"23264778073\"]{background-color:#9e1e62;border:1px solid #9e1e62;border-radius:35px;color:#fff;cursor:pointer;display:block;font-size:20px;margin:40px 15vw;max-width:60vw;padding:14px 20px;text-decoration:none;-webkit-transition:all linear .3s;-webkit-transition:all linear .3s;transition:all linear .3s}.button[data-jsx-ext~=\"23264778073\"]:hover{background-color:#fff;color:#9e1e62}@media screen and (min-width:1040px){.button[data-jsx-ext~=\"23264778073\"]{display:inline-block;margin-left:5vw;margin-right:0}.button[data-jsx-ext~=\"23264778073\"]:first-of-type{margin-left:0}}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy9nbG9iYWwuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxBQWFvQixBQWFSLEFBYUssQUFTQSxBQWVBLEFBUUUsQUFTZSxBQVlFLEFBYUosQUFVVixBQVlDLEFBU0QsQUFXYyxBQVNmLEFBUUksQUFTUixBQVVBLEFBT0MsQUFJSixBQVlVLEFBUVIsQUFTSyxBQVFGLEFBZ0JPLEFBYU4sQUFVRyxBQWFNLEFBV1IsQUFZWSxBQVFBLEFBV0EsQUFlVCxBQVNQLEFBVWdCLEFBV2xCLEFBU2lCLEFBVUwsQUFTRSxBQWNaLEFBUUksQUFXRyxBQVFSLEFBV0EsQUFJWSxBQUtaLEFBTUssQUFHb0YsQUFhSSxBQUlILEFBSXRGLEFBT0QsQUFHUSxBQUtLLEFBSVosQUFJRixBQUtRLEFBS0UsQUFJTixBQUlMLEFBR00sQUFPRSxBQVNMLEFBR0EsQUFJUSxBQU9BLEFBR00sQUFTTCxBQUlOLEFBSUssQUFLZCxBQUlXLEFBSUosQUFHTyxBQVFiLEFBR2EsQUFhSCxBQUtHLEFBZUQsQUFLQyxBQUlMLFNBam5CdEIsQUFpakJjLENBNUZLLEFBa0NGLENBL1VqQixBQXlRZ0IsQ0F6RmhCLEFBOEZxQixBQW1JQSxBQVdOLENBeFlKLEFBaU9YLEFBV0EsQ0EzWkEsQUFTa0IsQUFlbEIsQUE4R0EsQUFVZ0IsQUFzS2hCLEFBK0RBLEFBK091QixDQTdjdkIsQUEyU3VCLEFBbUJBLEFBSVAsQUFvQ0ksQUFHQSxDQWhlcEIsQUFnS0EsQUEyVnVCLENBcmpCSyxBQXVQNUIsQUF5UXNCLENBalh0QixBQW1FQSxBQXVFWSxBQThIWixBQTRLYyxDQTdkYyxBQXFCNUIsQUErYjBCLENBeGMxQixBQStJQSxBQXVRc0IsQ0F2VXRCLEFBc0kwQixBQTJGMUIsQUFzRm1CLEFBdUNHLEFBNEZBLENBcGVULEFBbURiLEFBNFJzQixBQXlDRCxBQW1DRCxBQWdERixBQW9CQSxDQTVZRCxBQXFORixDQXZFZixDQWlFYSxBQWtESSxBQWtCRixBQXdDYSxBQXFDZixBQVdTLEFBa0JLLENBelYzQixBQW1IZSxBQW1NSCxFQXpaUSxBQStHcEIsQ0E5THVDLEFBa1JqQixBQXFJTCxBQXNERixDQXJnQmYsQUFpUUEsQUFRQSxBQVdnQyxBQWtDQSxDQXZSQyxDQVlqQixBQXVEQSxBQThiSCxDQTVhYixDQXVTZ0IsQUE4QkssRUFuQ0gsQUFpREEsQUFjRixBQXlESyxBQXlCQyxBQTJDSCxDQXRGSSxBQTJCTSxBQWlFUixDQWpaRixBQWtSSCxBQXNHQyxDQWpPakIsQ0FxR2tCLEFBa0NILEFBaUNHLENBMUJRLEVBL2dCTSxFQXNHVyxBQWlPM0MsQUE4UXNCLENBdGdCdEIsQUF1REEsQUFxQzBCLEVBNlVULENBMUlqQixDQXlQcUIsQ0ExSUosQ0FyS0QsQUFrQ0osQUErRk8sQUFrTUcsQ0F6QkosQ0EvaEJQLEFBbWFRLEFBMERJLEFBVU4sQ0EvVE4sQ0FnV1MsRUFqQlUsR0ExQ1IsQ0FyTHRCLENBdlJtQixDQXdLbkIsQUFpUGtCLENBeUhILENBMWZmLEFBNk5nQixDQWtQUyxFQTZEWixDQTViYixDQXFYaUIsRUFoaUJqQixPQW9FQSxBQXFQaUIsQUErU0EsRUF4RUMsSUExYnlCLEVBcWNMLE9BalAxQixBQStTSSxJQW5KTSxHQWpCYSxBQVkwRSxHQXRKeEYsR0FrTEcsQ0FtQ0osQUEwRkgsQ0EvQkMsSUFuRUcsQ0FsREUsSUEvV3ZCLEdBcWM4QixFQWhQOUIsQUErU21CLEVBL0JKLENBM0RBLE1BUk0sRUFuRUcsSUFzSVIsQUFVYyxDQXBFakIsQ0EwRkksVUExRkgsS0EyRk0sQ0F0S1AsVUFnSmtCLENBL0laLE1Bc0tJLFFBbEVRLEdBbkdiLEtBZ0VJLEtBc0djLENBdkJKLEtBOUlYLG1CQUNILEVBOEljLE9BdUJKLE9BcEtULGlCQUNGLGVBQUMscUJBbUtXLFdBdEJlLHlDQUN6QixpQkFDQyxrQkFBQyIsImZpbGUiOiJzdHlsZXMvZ2xvYmFsLnNjc3MiLCJzb3VyY2VSb290IjoiL1VzZXJzL25pbW1vL21pc2MvbmV4dGpzLWV4YW1wbGUiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiLyohIG5vcm1hbGl6ZS5jc3MgdjcuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xcblxcbi8qIERvY3VtZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxcbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cXG4gKi9cXG5cXG5odG1sIHtcXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXFxufVxcblxcbi8qIFNlY3Rpb25zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cXG4gKi9cXG5cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXFxuICovXFxuXFxuYXJ0aWNsZSxcXG5hc2lkZSxcXG5mb290ZXIsXFxuaGVhZGVyLFxcbm5hdixcXG5zZWN0aW9uIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7XFxufVxcblxcbi8qIEdyb3VwaW5nIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxcbiAqL1xcblxcbmZpZ2NhcHRpb24sXFxuZmlndXJlLFxcbm1haW4geyAvKiAxICovXFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxcbiAqL1xcblxcbmZpZ3VyZSB7XFxuICBtYXJnaW46IDFlbSA0MHB4O1xcbn1cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxcbiAqL1xcblxcbmhyIHtcXG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XFxuICAgICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXFxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnByZSB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXFxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxcbiAqL1xcblxcbmEge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYWJiclt0aXRsZV0ge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXFxuICovXFxuXFxuYixcXG5zdHJvbmcge1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYixcXG5zdHJvbmcge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuY29kZSxcXG5rYmQsXFxuc2FtcCB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cXG4gKi9cXG5cXG5kZm4ge1xcbiAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXFxuICovXFxuXFxubWFyayB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xcbiAgY29sb3I6ICMwMDA7XFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogODAlO1xcbn1cXG5cXG4vKipcXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cXG4gKiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuc3ViLFxcbnN1cCB7XFxuICBmb250LXNpemU6IDc1JTtcXG4gIGxpbmUtaGVpZ2h0OiAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG5cXG5zdWIge1xcbiAgYm90dG9tOiAtMC4yNWVtO1xcbn1cXG5cXG5zdXAge1xcbiAgdG9wOiAtMC41ZW07XFxufVxcblxcbi8qIEVtYmVkZGVkIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxcbiAqL1xcblxcbmF1ZGlvLFxcbnZpZGVvIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cXG4gKi9cXG5cXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIGhlaWdodDogMDtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXFxuICovXFxuXFxuaW1nIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXFxuICovXFxuXFxuc3ZnOm5vdCg6cm9vdCkge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLyogRm9ybXNcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXFxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIG1hcmdpbjogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCB7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uLFxcbnNlbGVjdCB7IC8qIDEgKi9cXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXFxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5idXR0b24sXFxuaHRtbCBbdHlwZT1cXFwiYnV0dG9uXFxcIl0sIC8qIDEgKi9cXG5bdHlwZT1cXFwicmVzZXRcXFwiXSxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG4vKipcXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXFxuICovXFxuXFxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXTotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwicmVzZXRcXFwiXTotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl06LW1vei1mb2N1c3Jpbmcge1xcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXFxuICovXFxuXFxuZmllbGRzZXQge1xcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxubGVnZW5kIHtcXG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXFxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cXG59XFxuXFxuLyoqXFxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXFxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cXG4gKi9cXG5cXG5wcm9ncmVzcyB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxcbiAqL1xcblxcbnRleHRhcmVhIHtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXFxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXSxcXG5bdHlwZT1cXFwicmFkaW9cXFwiXSB7XFxuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxcbiAqL1xcblxcblt0eXBlPVxcXCJudW1iZXJcXFwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwic2VhcmNoXFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxcbiAqL1xcblxcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuXFxuLyogSW50ZXJhY3RpdmVcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXFxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxcbiAqL1xcblxcbmRldGFpbHMsIC8qIDEgKi9cXG5tZW51IHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdW1tYXJ5IHtcXG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcXG59XFxuXFxuLyogU2NyaXB0aW5nXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cXG4gKi9cXG5cXG5jYW52YXMge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cXG4gKi9cXG5cXG50ZW1wbGF0ZSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4vKiBIaWRkZW5cXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cXG4gKi9cXG5cXG5baGlkZGVuXSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMyMWYzZTtcXG4gIHBhZGRpbmc6IDIlO1xcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxcblxcbmhlYWRlciAubG9nbyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBoZWlnaHQ6IDUwcHg7XFxuICAgIHdpZHRoOiBhdXRvOyB9XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTA0MHB4KSB7XFxuICAgICAgaGVhZGVyIC5sb2dvIHtcXG4gICAgICAgIGhlaWdodDogNzBweDsgfSB9XFxuXFxuLmJhbm5lciB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcImh0dHA6Ly90cmF2ZWwuY2xvdWQvd3AtY29udGVudC91cGxvYWRzLzIwMTcvMDMvdHJhdmVsLWNsb3VkLWhlYWRlci1tb2JpbGUuanBnXFxcIik7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCBib3R0b207XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgY29sb3I6ICNmZmY7XFxuICBtYXJnaW4tdG9wOiAtMjBweDtcXG4gIG1pbi1oZWlnaHQ6IDcwdmg7XFxuICBwYWRkaW5nLWJvdHRvbTogMTQlO1xcbiAgcGFkZGluZy1sZWZ0OiAzJTtcXG4gIHBhZGRpbmctcmlnaHQ6IDMlO1xcbiAgcGFkZGluZy10b3A6IDIlOyB9XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcXG4gICAgLmJhbm5lciB7XFxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJodHRwOi8vdHJhdmVsLmNsb3VkL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE3LzAzL3RyYXZlbC1jbG91ZC1oZWFkZXItdGFibGV0LmpwZ1xcXCIpOyB9IH1cXG5cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDQwcHgpIHtcXG4gICAgLmJhbm5lciB7XFxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJodHRwOi8vdHJhdmVsLmNsb3VkL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE3LzAzL3RyYXZlbC1jbG91ZC1oZWFkZXItd2ViLmpwZ1xcXCIpO1xcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH0gfVxcblxcbi5iYW5uZXIgaDEge1xcbiAgICBmb250LXNpemU6IDU1cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxuICAgIGxpbmUtaGVpZ2h0OiA1NXB4O1xcbiAgICBwYWRkaW5nOiA1MHB4OyB9XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTA0MHB4KSB7XFxuICAgICAgLmJhbm5lciBoMSB7XFxuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cXG5cXG4uYmFubmVyIC5idXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICBib3JkZXItY29sb3I6ICNmZmY7XFxuICAgIGNvbG9yOiAjOWUxZTYyOyB9XFxuXFxuLmJhbm5lciAuYnV0dG9uOmhvdmVyIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWUxZTYyO1xcbiAgICAgIGNvbG9yOiAjZmZmOyB9XFxuXFxuLmJhbm5lciBzcGFuIHtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XFxuXFxuLmJ1c2luZXNzQ2hhbGxlbmdlcyB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBwYWRkaW5nOiAxMDBweDsgfVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwNDBweCkge1xcbiAgLmNoYWxsZW5nZUl0ZW0ge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIG1heC13aWR0aDogMzB2dztcXG4gICAgbWFyZ2luOiAyMHB4OyB9IH1cXG5cXG4ucHJvZHVjdEZlYXR1cmVzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XFxuICBwYWRkaW5nOiAyMHB4OyB9XFxuXFxuLnByb2R1Y3RGZWF0dXJlcyBoMiB7XFxuICAgIHBhZGRpbmctdG9wOiAyMHB4OyB9XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTA0MHB4KSB7XFxuICAgIC5wcm9kdWN0RmVhdHVyZXMge1xcbiAgICAgIHBhZGRpbmc6IDA7IH0gfVxcblxcbi5mZWF0dXJlQ29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cXG5cXG4uZmVhdHVyZURlc2NyaXB0aW9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICAtd2Via2l0LWJveC1mbGV4OiAxO1xcbiAgICAgIC1tcy1mbGV4LXBvc2l0aXZlOiAxO1xcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XFxuICBtYXJnaW4tYm90dG9tOiAydnc7XFxuICBwYWRkaW5nOiAyMHB4O1xcbiAgd2lkdGg6IDgwdnc7IH1cXG5cXG4uZmVhdHVyZURlc2NyaXB0aW9uIGgzIHtcXG4gICAgZm9udC1zaXplOiAyMnB4OyB9XFxuXFxuLmZlYXR1cmVEZXNjcmlwdGlvbiBwIHtcXG4gICAgZm9udC1zaXplOiAxOHB4OyB9XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTA0MHB4KSB7XFxuICAgIC5mZWF0dXJlRGVzY3JpcHRpb24ge1xcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgICBtYXJnaW4tbGVmdDogM3Z3O1xcbiAgICAgIG1hcmdpbi1yaWdodDogM3Z3O1xcbiAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xcbiAgICAgIHdpZHRoOiAyNHZ3OyB9IH1cXG5cXG4uc2l0ZU5hdmlnYXRpb24ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMyMWYzZTsgfVxcblxcbi5zaXRlTmF2aWdhdGlvbiBhIHtcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmZmY7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCBsaW5lYXIgLjNzO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgbGluZWFyIC4zczsgfVxcblxcbi5zaXRlTmF2aWdhdGlvbiBhOmhvdmVyIHtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICAgIGNvbG9yOiAjMzIxZjNlOyB9XFxuXFxuLnNpdGVOYXZpZ2F0aW9uIGE6bGFzdC1vZi10eXBlIHtcXG4gICAgICBib3JkZXItYm90dG9tOiAwOyB9XFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTA0MHB4KSB7XFxuICAgICAgLnNpdGVOYXZpZ2F0aW9uIGEge1xcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfSB9XFxuXFxuLnNpdGVOYXZpZ2F0aW9uIC5jbG9zZWQge1xcbiAgICBoZWlnaHQ6IDA7IH1cXG5cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDQwcHgpIHtcXG4gICAgLnNpdGVOYXZpZ2F0aW9uIHtcXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgcmlnaHQ6IDA7XFxuICAgICAgdG9wOiAwOyB9XFxuICAgICAgLnNpdGVOYXZpZ2F0aW9uLmNsb3NlZCB7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7IH0gfVxcblxcbmZvb3RlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTQxNDE4O1xcbiAgY29sb3I6ICNmZmY7XFxuICAtbXMtZmxleC1uZWdhdGl2ZTogMDtcXG4gICAgICBmbGV4LXNocmluazogMDtcXG4gIG1hcmdpbi10b3A6IGF1dG87XFxuICBwYWRkaW5nOiAyMHB4OyB9XFxuXFxuaHRtbCB7XFxuICBoZWlnaHQ6IDEwMCU7IH1cXG5cXG5ib2R5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMxNjE2MTg7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XFxuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcXG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIFNhbnMgUHJvJywgc2Fucy1zZXJpZjtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuXFxuLmNvbnRlbnQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIG1pbi1oZWlnaHQ6IDU1dmg7XFxuICBwYWRkaW5nOiAyMHB4IDA7IH1cXG5cXG4uYnV0dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5ZTFlNjI7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjOWUxZTYyO1xcbiAgYm9yZGVyLXJhZGl1czogMzVweDtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBtYXJnaW46IDQwcHggMTV2dztcXG4gIG1heC13aWR0aDogNjB2dztcXG4gIHBhZGRpbmc6IDE0cHggMjBweDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIGxpbmVhciAuM3M7XFxuICB0cmFuc2l0aW9uOiBhbGwgbGluZWFyIC4zczsgfVxcblxcbi5idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICBjb2xvcjogIzllMWU2MjsgfVxcblxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwNDBweCkge1xcbiAgICAuYnV0dG9uIHtcXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgICAgbWFyZ2luLWxlZnQ6IDV2dztcXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cXG4gICAgICAuYnV0dG9uOmZpcnN0LW9mLXR5cGUge1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH0gfVxcblwiIl19 */\n/*@ sourceURL=styles/global.scss */";
__styledJsxDefaultExport.__scopedHash = "23264778073";
module.exports = __styledJsxDefaultExport;

/***/ }),

/***/ 572:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(11);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(199);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _link = __webpack_require__(540);

var _link2 = _interopRequireDefault(_link);

var _navigation = __webpack_require__(573);

var _navigation2 = _interopRequireDefault(_navigation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/nimmo/misc/nextjs-example/components/common/header.js';


var header = function header() {
  return _react2.default.createElement('div', {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 7
    }
  }, _react2.default.createElement('header', {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    }
  }, _react2.default.createElement(_link2.default, { href: '/index', __source: {
      fileName: _jsxFileName,
      lineNumber: 9
    }
  }, _react2.default.createElement('a', { className: 'logo', __source: {
      fileName: _jsxFileName,
      lineNumber: 10
    }
  }, 'Logo goes here'))), _react2.default.createElement(_navigation2.default, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15
    }
  }));
};

exports.default = header;

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/nimmo/misc/nextjs-example/components/common/header.js"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/nimmo/misc/nextjs-example/components/common/header.js"); } } })();

/***/ }),

/***/ 573:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(11);

var _react2 = _interopRequireDefault(_react);

var _link = __webpack_require__(540);

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/nimmo/misc/nextjs-example/components/common/navigation.js';


var navigation = function navigation() {
  return _react2.default.createElement('nav', { className: 'siteNavigation', __source: {
      fileName: _jsxFileName,
      lineNumber: 5
    }
  }, _react2.default.createElement(_link2.default, { href: '/index', __source: {
      fileName: _jsxFileName,
      lineNumber: 6
    }
  }, 'Home'), _react2.default.createElement(_link2.default, { href: '/about', __source: {
      fileName: _jsxFileName,
      lineNumber: 7
    }
  }, 'About'), _react2.default.createElement(_link2.default, { href: '/sign-up', __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    }
  }, 'Sign up/in'), _react2.default.createElement(_link2.default, { href: '/book-demo', __source: {
      fileName: _jsxFileName,
      lineNumber: 9
    }
  }, 'Book a demo'));
};

exports.default = navigation;

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/nimmo/misc/nextjs-example/components/common/navigation.js"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/nimmo/misc/nextjs-example/components/common/navigation.js"); } } })();

/***/ }),

/***/ 608:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(11);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = "/Users/nimmo/misc/nextjs-example/components/common/footer.js";

var footer = function footer() {
  return _react2.default.createElement("footer", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 3
    }
  }, _react2.default.createElement("p", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 4
    }
  }, "This is a footer. Exciting stuff! This is a basic example of a site using NextJS. It's pretty nice to use! :)"));
};

exports.default = footer;

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/nimmo/misc/nextjs-example/components/common/footer.js"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/nimmo/misc/nextjs-example/components/common/footer.js"); } } })();

/***/ }),

/***/ 613:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(614);


/***/ }),

/***/ 614:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__resourceQuery) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(11);

var _react2 = _interopRequireDefault(_react);

var _link = __webpack_require__(540);

var _link2 = _interopRequireDefault(_link);

var _page_head = __webpack_require__(570);

var _page_head2 = _interopRequireDefault(_page_head);

var _header = __webpack_require__(572);

var _header2 = _interopRequireDefault(_header);

var _footer = __webpack_require__(608);

var _footer2 = _interopRequireDefault(_footer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = '/Users/nimmo/misc/nextjs-example/pages/book-demo.js?entry';


var page = function page() {
  return _react2.default.createElement('div', {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    }
  }, _react2.default.createElement(_page_head2.default, { pageTitle: 'Book A Demo Page', __source: {
      fileName: _jsxFileName,
      lineNumber: 9
    }
  }), _react2.default.createElement(_header2.default, { pageTitle: 'NextJS Example - Book a demo', __source: {
      fileName: _jsxFileName,
      lineNumber: 10
    }
  }), _react2.default.createElement('main', { className: 'content', __source: {
      fileName: _jsxFileName,
      lineNumber: 11
    }
  }, _react2.default.createElement('p', {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 12
    }
  }, 'Book a demo and fall in love etc.')), _react2.default.createElement(_footer2.default, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 14
    }
  }));
};

exports.default = page;

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/nimmo/misc/nextjs-example/pages/book-demo.js"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/nimmo/misc/nextjs-example/pages/book-demo.js"); } } })();
    (function (Component, route) {
      if (false) return
      if (false) return

      var qs = __webpack_require__(70)
      var params = qs.parse(__resourceQuery.slice(1))
      if (params.entry == null) return

      module.hot.accept()
      Component.__route = route

      if (module.hot.status() === 'idle') return

      var components = next.router.components
      for (var r in components) {
        if (!components.hasOwnProperty(r)) continue

        if (components[r].Component.__route === route) {
          next.router.update(r, Component)
        }
      }
    })(typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__.default : (module.exports.default || module.exports), "/book-demo")
  
/* WEBPACK VAR INJECTION */}.call(exports, "?entry"))

/***/ })

},[613]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
            return { page: comp.default }
          })
        